// https://rjsf-team.github.io/react-jsonschema-form/
import { useState } from 'react';
import Form from '@rjsf/mui';
import validator from '@rjsf/validator-ajv8';
//import <%= it.json_schema %> from <~ it.json_schema_path >;

const CreateDatasetInstance = () => {

    const log = (type) => console.log.bind(console, type);
    const [isUpdateMode, setUpdateMode] = useState<boolean>(false);
    const [formData, setFormData] = useState<RJSFSchema>({});

    const schema: RJSFSchema = <%~ it.json_schema %>;

    return (
        <div>
            <Form
                schema={schema}
                validator={validator}
                onChange={log('changed')}
                onSubmit={log('submitted')}
                onError={log('errors')}
                uiSchema={{}}
                formData={formData}
                showErrorList="top"
            >
                {isUpdateMode && (<div>
                    <button type='submit'>Submit</button>
                    <button type='button'>Cancel</button>
                </div>)}
            </ Form>
        </div>
    );
}

export default CreateDatasetInstance;
